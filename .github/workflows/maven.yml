# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: 'write'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Run Dependency-Check for CVE analysis
    - name: Install Dependency-Check
      run: |
        curl -sL https://github.com/jeremylong/DependencyCheck/releases/download/v8.3.1/dependency-check-8.3.1-release.zip -o dependency-check.zip
        unzip dependency-check.zip -d dependency-check
        export PATH=$PATH:$(pwd)/dependency-check/bin

    - name: Run Dependency-Check CVE Analysis
      run: dependency-check/bin/dependency-check.sh --project "protobootapp" --scan . --out dependency-check-report --format XML

    # Upload CVE report as an artifact
    - name: Upload Dependency-Check Report
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: dependency-check-report
     
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6